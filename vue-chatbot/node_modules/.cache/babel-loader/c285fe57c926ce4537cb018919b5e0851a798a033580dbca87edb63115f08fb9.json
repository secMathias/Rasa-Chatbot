{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-763e3b5b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"chatbot-bubble\"\n};\nconst _hoisted_2 = {\n  class: \"chatbot-header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Chatbot\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"chatbot-body\",\n  ref: \"chatBody\"\n};\nconst _hoisted_5 = {\n  class: \"chatbot-footer\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"send-btn\"\n}, \"Send\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeChatbot && $options.closeChatbot(...args)),\n    class: \"close-btn\"\n  }, \"Ã—\")]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: _normalizeClass(['message', message.isUser ? 'user-message' : 'chatbot-message'])\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message.text), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMessage = $event),\n    placeholder: \"Type a message...\",\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newMessage]]), _hoisted_6], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","ref","type","$props","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","closeChatbot","_hoisted_4","_Fragment","_renderList","$data","messages","message","id","_normalizeClass","isUser","_toDisplayString","text","_hoisted_5","onSubmit","_withModifiers","sendMessage","$event","newMessage","placeholder","onKeyup","_withKeys","_hoisted_6","_createCommentVNode"],"sources":["/Users/maclaptop/Documents/VSCode/VUE_Chatbot_2.0/vue-chatbot/src/components/ChatbotBubble.vue"],"sourcesContent":["<template>\n  <div v-if=\"isVisible\" class=\"chatbot-bubble\">\n    <div class=\"chatbot-header\">\n      <h4>Chatbot</h4>\n      <button @click=\"closeChatbot\" class=\"close-btn\">&times;</button>\n    </div>\n    <div class=\"chatbot-body\" ref=\"chatBody\">\n      <div \n        v-for=\"message in messages\" \n        :key=\"message.id\" \n        :class=\"['message', message.isUser ? 'user-message' : 'chatbot-message']\"\n      >\n        <p>{{ message.text }}</p>\n      </div>\n    </div>\n    <div class=\"chatbot-footer\">\n      <form @submit.prevent=\"sendMessage\">\n        <input \n          type=\"text\" \n          v-model=\"newMessage\" \n          placeholder=\"Type a message...\" \n          @keyup.enter=\"sendMessage\"\n        />\n        <button type=\"submit\" class=\"send-btn\">Send</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ChatbotBubble',\n  props: ['isVisible'],\n  data() {\n    return {\n      newMessage: '',\n      messages: [\n        { id: 0, text: 'Hello! Ask me to get information on crypto.', isUser: false }\n      ]\n    };\n  },\n  methods: {\n    closeChatbot() {\n      this.$emit('toggle-chatbot');\n    },\n    async sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        const message = { id: Date.now(), text: this.newMessage, isUser: true };\n        this.messages.push(message);\n        this.newMessage = '';\n        this.scrollToBottom();\n\n        try {\n          const response = await axios.post('http://localhost:8000/api/chat', message);\n          console.log('Response:', response.data);\n          this.messages.push({ id: Date.now(), text: response.data.message, isUser: false });\n          this.scrollToBottom();\n        } catch (error) {\n          console.error('Error sending message:', error);\n          alert('Failed to send message to the server.');\n        }\n      }\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatBody = this.$refs.chatBody;\n        chatBody.scrollTop = chatBody.scrollHeight;\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chatbot-bubble {\n  position: fixed;\n  bottom: 110px;\n  right: 40px;\n  width: 300px;\n  height: 450px;\n  background-color: #f9f9f9;\n  border: 1px solid #e0e0e0;\n  border-radius: 15px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  font-family: 'Roboto', sans-serif;\n}\n\n.chatbot-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border-radius: 15px 15px 0 0;\n  font-size: 18px;\n}\n\n.chatbot-header h4 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.chatbot-header .close-btn {\n  background: transparent;\n  border: none;\n  font-size: 24px;\n  color: white;\n  cursor: pointer;\n}\n\n.chatbot-body {\n  flex: 1;\n  padding: 10px;\n  overflow-y: auto;\n  font-size: 14px;\n  line-height: 1.4;\n  color: #333;\n  display: flex;\n  flex-direction: column;\n}\n\n.message {\n  margin: 3px 0;\n  padding: 8px 10px;\n  border-radius: 10px;\n  max-width: 70%;\n  word-wrap: break-word;\n  display: inline-block;\n}\n\n.user-message {\n  background-color: #007bff;\n  color: white;\n  align-self: flex-end;\n  text-align: right;\n}\n\n.chatbot-message {\n  background-color: #0056b3;\n  color: white;\n  align-self: flex-start;\n  text-align: left;\n}\n\n.chatbot-footer {\n  padding: 10px;\n  border-top: 1px solid #e0e0e0;\n  background-color: #f1f1f1;\n}\n\n.chatbot-footer form {\n  display: flex;\n}\n\n.chatbot-footer input {\n  flex: 1;\n  padding: 8px 10px;\n  border: 1px solid #ccc;\n  border-radius: 25px;\n  font-size: 14px;\n  transition: border-color 0.3s;\n}\n\n.chatbot-footer input:focus {\n  border-color: #007bff;\n  outline: none;\n}\n\n.chatbot-footer .send-btn {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  padding: 8px 15px;\n  margin-left: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.chatbot-footer .send-btn:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";;;EAAAA,GAAA;EACwBC,KAAK,EAAC;;;EACrBA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAgB,YAAZ,SAAO;;EAGRD,KAAK,EAAC,cAAc;EAACE,GAAG,EAAC;;;EASzBF,KAAK,EAAC;AAAgB;gEAQvBC,mBAAA,CAAoD;EAA5CE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAW,MAAI;;SAtBtCI,MAAA,CAAAC,SAAS,I,cAApBC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJN,mBAAA,CAGM,OAHNO,UAGM,GAFJC,UAAgB,EAChBR,mBAAA,CAAgE;IAAvDS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEZ,KAAK,EAAC;KAAY,GAAO,E,GAEzDC,mBAAA,CAQM,OARNc,UAQM,I,kBAPJT,mBAAA,CAMMU,SAAA,QAbZC,WAAA,CAQ0BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADhBd,mBAAA,CAMM;MAJHP,GAAG,EAAEqB,OAAO,CAACC,EAAE;MACfrB,KAAK,EAVdsB,eAAA,aAU4BF,OAAO,CAACG,MAAM;QAElCtB,mBAAA,CAAyB,WAAAuB,gBAAA,CAAnBJ,OAAO,CAACK,IAAI,iB;0DAGtBxB,mBAAA,CAUM,OAVNyB,UAUM,GATJzB,mBAAA,CAQO;IARA0B,QAAM,EAAAhB,MAAA,QAAAA,MAAA,MAhBnBiB,cAAA,KAAAhB,IAAA,KAgB6BC,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAjB,IAAA,CAAW;sBAChCX,mBAAA,CAKE;IAJAE,IAAI,EAAC,MAAM;IAlBrB,uBAAAQ,MAAA,QAAAA,MAAA,MAAAmB,MAAA,IAmBmBZ,KAAA,CAAAa,UAAU,GAAAD,MAAA;IACnBE,WAAW,EAAC,mBAAmB;IAC9BC,OAAK,EAAAtB,MAAA,QAAAA,MAAA,MArBhBuB,SAAA,KAAAtB,IAAA,KAqBwBC,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAjB,IAAA,CAAW;iEAFhBM,KAAA,CAAAa,UAAU,E,GAIrBI,UAAoD,C,kCAvB5DC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}